-- generated by Digital. Don't modify this file!
-- Any changes will be lost if this file is regenerated.

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity hw2 is
  port (
    A, B, C, D: in std_logic;
    L1, L2, L3, L4, L5, L6: out std_logic);
end hw2;

architecture Equations of hw2 is
begin
	-- concurrent assignment statements
	L1  <= not a or b or c;
	L2  <= (a and not c) or (b and not c and d) or (a and b and d) or (not a and not b and c) or (not a and c and not d);
	L3  <= (not a and not c and d) or (not a and b and c) or (a and not b and not c) or (a and c and d);
	L4  <= (not a and b and not d) or (not a and c and c) or (b and c and not d) or (a and not c and d);
	L5  <= (a and b) or (a and c); 
	L6  <= '0';
end Equations;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity main is
  port (
    A: in std_logic;
    B: in std_logic;
    C: in std_logic;
    D: in std_logic;
    L1: out std_logic;
    L2: out std_logic;
    L3: out std_logic;
    L4: out std_logic;
    L5: out std_logic;
    L6: out std_logic);
end main;

architecture Behavioral of main is
begin
  gate0: entity work.hw2 -- hw2
    port map (
      A => A,
      B => B,
      C => C,
      D => D,
      L1 => L1,
      L2 => L2,
      L3 => L3,
      L4 => L4,
      L5 => L5,
      L6 => L6);
end Behavioral;
